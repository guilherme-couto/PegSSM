@book{Fowler2010,
 author = {Martin Fowler},
 title = {Domain-Specific Languages},
 publisher = {Addilson-Wesley},
 year = {2010},
 isbn = {0321712943},
 address = {Boston, USA}
}

@article{Kosar2010,
title = "Comparing General-Purpose and Domain-Specific Languages: An Empirical Study",
journal = "Computer Science and Information Systems",
author = "Toma\v{z} Kosar and Nuno Oliveira and Mernik Marjan and Maria {Jo\~{a}o} Varanda Pereira and Matej \v{C}repin\v{s}ek and Daniela da Cruz and Pedro Rangel Henriques",
volume = "7",
issue = "2",
year = "2010",
pages = "247-264"
}

@inproceedings{Barisic2011,
 author = {Bari\v{s}i\'{c}, Ankica and Amaral, Vasco and Goul\~{a}o, Miguel and Barroca, Bruno},
 title = {Quality in Use of Domain-specific Languages: A Case Study},
 booktitle = {Proceedings of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools},
 series = {PLATEAU'11},
 year = {2011},
 isbn = {978-1-4503-1024-6},
 location = {Portland, Oregon, USA},
 pages = {65--72},
 numpages = {8},
 acmid = {2089170},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {domain-specific languages, experimental software engineering, language evaluation, software language engineering, usability},
}

@inproceedings{Erdweg2011,
 author = {Erdweg, Sebastian and Rendel, Tillmann and K\"{a}stner, Christian and Ostermann, Klaus},
 title = {{SugarJ}: library-based syntactic language extensibility},
 booktitle = {Proceedings of the 2011 ACM international conference on Object oriented programming systems languages and applications},
 series = {OOPSLA '11},
 year = {2011},
 isbn = {978-1-4503-0940-0},
 location = {Portland, Oregon, USA},
 pages = {391--406},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2048066.2048099},
 doi = {10.1145/2048066.2048099},
 acmid = {2048099},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DSL embedding, SugarJ, language composition, language extensibility, libraries, syntactic sugar},
}

@article{Kosar2012,
year={2012},
issn={1382-3256},
journal={Empirical Software Engineering},
volume={17},
number={3},
title={Program comprehension of domain-specific and general-purpose languages: comparison using a family of experiments},
publisher={Springer US},
keywords={Domain-specific languages; General-purpose languages; Program understanding; Program comprehension; Controlled experiments; Language evaluations},
author={Kosar, Toma\v{z} and Mernik, Marjan and Carver, Jeffrey C.},
pages={276-304},
language={English}
}

@incollection{Reis2012,
year={2012},
isbn={978-3-642-33181-7},
booktitle={Programming Languages},
volume={7554},
series={Lecture Notes in Computer Science},
editor={Carvalho Junior, Francisco Heron and Barbosa, Luis Soares},
title={Adaptable Parsing Expression Grammars},
publisher={Springer Berlin Heidelberg},
keywords={extensible languages; adaptable grammars; PEG},
author={Leonardo V.S. Reis and Roberto S. Bigonha and Vladimir O. {Di Iorio} and Luis Eduardo S. Amorim},
pages={72-86}
}

@article{Reis2014a,
title = "The formalization and implementation of Adaptable Parsing Expression Grammars ",
journal = "Science of Computer Programming ",
volume = "96, Part 2",
pages = "191 - 210",
year = "2014",
note = "Selected and extended papers of the SBLP 2012",
issn = "0167-6423",
author = "Leonardo V.S. Reis and Roberto S. Bigonha and Vladimir O. Di Iorio and Luis Eduardo S. Amorim",
keywords = "Extensible languages",
keywords = "Adaptable grammars",
keywords = "\{PEG\} "
}

@article{Ford04,
author = {Ford, Bryan},
title = {Parsing Expression Grammars: A Recognition-Based Syntactic Foundation},
year = {2004},
issue_date = {January 2004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/982962.964011},
doi = {10.1145/982962.964011},
abstract = {For decades we have been using Chomsky's generative system of grammars, particularly context-free grammars (CFGs) and regular expressions (REs), to express the syntax of programming languages and protocols. The power of generative grammars to express ambiguity is crucial to their original purpose of modelling natural languages, but this very power makes it unnecessarily difficult both to express and to parse machine-oriented languages using CFGs. Parsing Expression Grammars (PEGs) provide an alternative, recognition-based formal foundation for describing machine-oriented syntax, which solves the ambiguity problem by not introducing ambiguity in the first place. Where CFGs express nondeterministic choice between alternatives, PEGs instead use prioritized choice. PEGs address frequently felt expressiveness limitations of CFGs and REs, simplifying syntax definitions and making it unnecessary to separate their lexical and hierarchical components. A linear-time parser can be built for any PEG, avoiding both the complexity and fickleness of LR parsers and the inefficiency of generalized CFG parsing. While PEGs provide a rich set of operators for constructing grammars, they are reducible to two minimal recognition schemas developed around 1970, TS/TDPL and gTS/GTDPL, which are here proven equivalent in effective recognition power.},
journal = {SIGPLAN Not.},
month = jan,
pages = {111â€“122},
numpages = {12},
keywords = {context-free grammars, GTDPL, lexical analysis, packrat parsing, regular expressions, unified grammars, scannerless parsing, syntactic predicates, BNF, parsing expression grammars, TDPL}
}
